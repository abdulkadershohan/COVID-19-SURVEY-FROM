{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\COVIT-19 SURVEY FROM\\\\my-app\\\\src\\\\Pages\\\\Covit-19 Live Stats\\\\Stats.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Column from \"react-columns\";\nimport axios from \"axios\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction Stats() {\n  const [latest, setLatest] = useState(\"\");\n  const [results, setResult] = useState([]);\n  const [searchCountry, setSearchCountry] = useState(\"\");\n  useEffect(() => {\n    axios.all([axios.get(\"https://corona.lmao.ninja/v3/covid-19/all\"), axios.get(\"https://disease.sh/v3/covid-19/countries\")]).then(responseArr => {\n      setLatest(responseArr[0].data);\n      setResult(responseArr[1].data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const date = new Date(parseInt(latest.updated));\n  const lastUpdated = date.toString();\n  const filterCountry = results.filter(item => {\n    return searchCountry !== \"\" ? item.country.includes(searchCountry) : item;\n  });\n  const countries = filterCountry.map((data, i) => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      big: \"light\",\n      text: \"dark\",\n      className: \"text-center\",\n      style: {\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: data.countryInfo.flag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, data.country), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Cases \", data.cases), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, \"Deaths \", data.deaths), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"Recovered \", data.recovered), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Today's Cases \", data.todayCases), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Today's deaths \", data.todaysDeaths), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Active \", data.active), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Critical \", data.critical)));\n  });\n  var queries = [{\n    columns: 2,\n    query: 'min-width: 50px'\n  }, {\n    columns: 3,\n    query: 'min-width:1000px'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardDeck, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    bg: \"secondary\",\n    text: \"white\",\n    className: \"text-center\",\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Cases\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, latest.cases)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"Last updated \", lastUpdated))), /*#__PURE__*/React.createElement(Card, {\n    bg: \"danger\",\n    text: \"white\",\n    className: \"text-center\",\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, \"Deaths\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, latest.deaths)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Last updated \", lastUpdated))), /*#__PURE__*/React.createElement(Card, {\n    bg: \"success\",\n    text: \"white\",\n    className: \"text-center\",\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"Recovered\"), /*#__PURE__*/React.createElement(Card.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, latest.recovered)), /*#__PURE__*/React.createElement(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, \"Last updated \", lastUpdated)))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formGroupSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Search a country\",\n    onChange: e => setSearchCountry(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    queries: queries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, countries));\n}\n\nexport default Stats;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/COVIT-19 SURVEY FROM/my-app/src/Pages/Covit-19 Live Stats/Stats.js"],"names":["React","Component","useEffect","useState","Card","CardDeck","Column","axios","Form","Stats","latest","setLatest","results","setResult","searchCountry","setSearchCountry","all","get","then","responseArr","data","catch","err","console","log","date","Date","parseInt","updated","lastUpdated","toString","filterCountry","filter","item","country","includes","countries","map","i","margin","countryInfo","flag","cases","deaths","recovered","todayCases","todaysDeaths","active","critical","queries","columns","query","e","target","value"],"mappings":"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","sourcesContent":["import React, {Component,useEffect,useState} from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from \"react-bootstrap/CardDeck\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Column from \"react-columns\"\r\nimport axios from \"axios\"\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\n\r\nfunction Stats(){\r\n    const [latest,setLatest]=useState(\"\");\r\n    const [results,setResult]=useState([])\r\n    const [searchCountry,setSearchCountry]=useState(\"\")\r\n\r\n\r\n    useEffect(()=>{\r\n        axios\r\n            .all([\r\n                axios.get(\"https://corona.lmao.ninja/v3/covid-19/all\"),\r\n                axios.get(\"https://disease.sh/v3/covid-19/countries\")\r\n\r\n            ])\r\n            .then(responseArr=>{\r\n                setLatest(responseArr[0].data);\r\n                setResult(responseArr[1].data)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            });\r\n\r\n    },[]);\r\n    const date=new Date(parseInt(latest.updated));\r\n    const lastUpdated =date.toString();\r\n\r\n    const filterCountry=results.filter(item=>{\r\n        return searchCountry !==\"\"?item.country.includes(searchCountry):item;\r\n    })\r\n\r\n    const countries=filterCountry.map((data, i)=>{\r\n\r\n        return (\r\n\r\n            <Card\r\n                key={i}\r\n                big=\"light\"\r\n                text=\"dark\"\r\n                className=\"text-center\"\r\n                style={{margin:\"10px\"}}\r\n            >\r\n                <Card.Img variant={\"top\"} src={data.countryInfo.flag}/>\r\n                <Card.Body>\r\n                    <Card.Title>{data.country}</Card.Title>\r\n                    <Card.Text>Cases {data.cases}</Card.Text>\r\n                    <Card.Text>Deaths {data.deaths}</Card.Text>\r\n                    <Card.Text>Recovered {data.recovered}</Card.Text>\r\n                    <Card.Text>Today's Cases {data.todayCases}</Card.Text>\r\n                    <Card.Text>Today's deaths {data.todaysDeaths}</Card.Text>\r\n                    <Card.Text>Active {data.active}</Card.Text>\r\n                    <Card.Text>Critical {data.critical}</Card.Text>\r\n\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n\r\n    });\r\n    var queries=[{\r\n        columns: 2,\r\n        query: 'min-width: 50px'\r\n    },{\r\n        columns: 3,\r\n        query: 'min-width:1000px'\r\n    }]\r\n\r\n    return (\r\n        <div>\r\n            <CardDeck>\r\n                <Card\r\n                    bg=\"secondary\" text=\"white\"\r\n                    className={\"text-center\"}\r\n                    style={{margin:\"10px\"}}\r\n                >\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Cases</Card.Title>\r\n                        <Card.Text>{latest.cases}</Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small>Last updated {lastUpdated}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card\r\n                    bg=\"danger\" text={\"white\"}\r\n                    className={\"text-center\"}\r\n                    style={{margin:\"10px\"}}\r\n                >\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Deaths</Card.Title>\r\n                        <Card.Text>{latest.deaths}</Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small>Last updated {lastUpdated}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card bg={\"success\"}\r\n                      text={\"white\"}\r\n                      className={\"text-center\"}\r\n                      style={{margin:\"10px\"}}\r\n                >\r\n\r\n                    <Card.Body>\r\n                        <Card.Title>Recovered</Card.Title>\r\n                        <Card.Text>{latest.recovered}</Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <small>Last updated {lastUpdated}</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </CardDeck>\r\n            <br/>\r\n\r\n            <Form>\r\n                <Form.Group controlId=\"formGroupSearch\">\r\n                    <Form.Control type=\"text\" placeholder=\"Search a country\" onChange={e=>setSearchCountry(e.target.value)} />\r\n                </Form.Group>\r\n            </Form>\r\n            <br/>\r\n\r\n\r\n            <Column queries={queries}>{countries}</Column>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Stats;"]},"metadata":{},"sourceType":"module"}