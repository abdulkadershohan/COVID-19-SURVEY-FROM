{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Asus\\\\Desktop\\\\COVIT-19 SURVEY FROM\\\\COVIT-19-SURVEY-FROM\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Card from'react-bootstrap/Card';import CardDeck from\"react-bootstrap/CardDeck\";import'bootstrap/dist/css/bootstrap.min.css';import Column from\"react-columns\";import axios from\"axios\";import Form from\"react-bootstrap/Form\";function Stats(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),latest=_useState2[0],setLatest=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),results=_useState4[0],setResult=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),searchCountry=_useState6[0],setSearchCountry=_useState6[1];useEffect(function(){axios.all([axios.get(\"https://corona.lmao.ninja/v3/covid-19/all\"),axios.get(\"https://disease.sh/v3/covid-19/countries\")]).then(function(responseArr){setLatest(responseArr[0].data);setResult(responseArr[1].data);}).catch(function(err){console.log(err);});},[]);var date=new Date(parseInt(latest.updated));var lastUpdated=date.toString();var filterCountry=results.filter(function(item){return searchCountry!==\"\"?item.country.includes(searchCountry):item;});var countries=filterCountry.map(function(data,i){return/*#__PURE__*/React.createElement(Card,{key:i,big:\"light\",text:\"dark\",className:\"text-center\",style:{margin:\"10px\"}},/*#__PURE__*/React.createElement(Card.Img,{variant:\"top\",src:data.countryInfo.flag}),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,data.country),/*#__PURE__*/React.createElement(Card.Text,null,\"Cases \",data.cases),/*#__PURE__*/React.createElement(Card.Text,null,\"Deaths \",data.deaths),/*#__PURE__*/React.createElement(Card.Text,null,\"Recovered \",data.recovered),/*#__PURE__*/React.createElement(Card.Text,null,\"Today's Cases \",data.todayCases),/*#__PURE__*/React.createElement(Card.Text,null,\"Today's deaths \",data.todaysDeaths),/*#__PURE__*/React.createElement(Card.Text,null,\"Active \",data.active),/*#__PURE__*/React.createElement(Card.Text,null,\"Critical \",data.critical)));});var queries=[{columns:2,query:'min-width: 50px'},{columns:3,query:'min-width:1000px'}];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CardDeck,null,/*#__PURE__*/React.createElement(Card,{bg:\"secondary\",text:\"white\",className:\"text-center\",style:{margin:\"10px\"}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Cases\"),/*#__PURE__*/React.createElement(Card.Text,null,latest.cases)),/*#__PURE__*/React.createElement(Card.Footer,null,/*#__PURE__*/React.createElement(\"small\",null,\"Last updated \",lastUpdated))),/*#__PURE__*/React.createElement(Card,{bg:\"danger\",text:\"white\",className:\"text-center\",style:{margin:\"10px\"}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Deaths\"),/*#__PURE__*/React.createElement(Card.Text,null,latest.deaths)),/*#__PURE__*/React.createElement(Card.Footer,null,/*#__PURE__*/React.createElement(\"small\",null,\"Last updated \",lastUpdated))),/*#__PURE__*/React.createElement(Card,{bg:\"success\",text:\"white\",className:\"text-center\",style:{margin:\"10px\"}},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Recovered\"),/*#__PURE__*/React.createElement(Card.Text,null,latest.recovered)),/*#__PURE__*/React.createElement(Card.Footer,null,/*#__PURE__*/React.createElement(\"small\",null,\"Last updated \",lastUpdated)))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Group,{controlId:\"formGroupSearch\"},/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Search a country\",onChange:function onChange(e){return setSearchCountry(e.target.value);}}))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Column,{queries:queries},countries));}export default Stats;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/COVIT-19 SURVEY FROM/COVIT-19-SURVEY-FROM/src/Pages/Covit-19 Live Stats/Stats.js"],"names":["React","useEffect","useState","Card","CardDeck","Column","axios","Form","Stats","latest","setLatest","results","setResult","searchCountry","setSearchCountry","all","get","then","responseArr","data","catch","err","console","log","date","Date","parseInt","updated","lastUpdated","toString","filterCountry","filter","item","country","includes","countries","map","i","margin","countryInfo","flag","cases","deaths","recovered","todayCases","todaysDeaths","active","critical","queries","columns","query","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from 'react';\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from \"react-bootstrap/CardDeck\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Column from \"react-columns\"\nimport axios from \"axios\"\nimport Form from \"react-bootstrap/Form\";\n\n\nfunction Stats(){\n    const [latest,setLatest]=useState(\"\");\n    const [results,setResult]=useState([])\n    const [searchCountry,setSearchCountry]=useState(\"\")\n\n\n    useEffect(()=>{\n        axios\n            .all([\n                axios.get(\"https://corona.lmao.ninja/v3/covid-19/all\"),\n                axios.get(\"https://disease.sh/v3/covid-19/countries\")\n\n            ])\n            .then(responseArr=>{\n                setLatest(responseArr[0].data);\n                setResult(responseArr[1].data)\n            })\n            .catch(err=>{\n                console.log(err);\n            });\n\n    },[]);\n    const date=new Date(parseInt(latest.updated));\n    const lastUpdated =date.toString();\n\n    const filterCountry=results.filter(item=>{\n        return searchCountry !==\"\"?item.country.includes(searchCountry):item;\n    })\n\n    const countries=filterCountry.map((data, i)=>{\n\n        return (\n\n            <Card\n                key={i}\n                big=\"light\"\n                text=\"dark\"\n                className=\"text-center\"\n\n                style={{margin:\"10px\"}}\n            >\n                <Card.Img variant={\"top\"} src={data.countryInfo.flag}/>\n                <Card.Body>\n                    <Card.Title>{data.country}</Card.Title>\n                    <Card.Text>Cases {data.cases}</Card.Text>\n                    <Card.Text>Deaths {data.deaths}</Card.Text>\n                    <Card.Text>Recovered {data.recovered}</Card.Text>\n                    <Card.Text>Today's Cases {data.todayCases}</Card.Text>\n                    <Card.Text>Today's deaths {data.todaysDeaths}</Card.Text>\n                    <Card.Text>Active {data.active}</Card.Text>\n                    <Card.Text>Critical {data.critical}</Card.Text>\n\n\n                </Card.Body>\n            </Card>\n        );\n\n    });\n    var queries=[{\n        columns: 2,\n        query: 'min-width: 50px'\n    },{\n        columns: 3,\n        query: 'min-width:1000px'\n    }]\n\n    return (\n        <div>\n            <CardDeck>\n                <Card\n                    bg=\"secondary\" text=\"white\"\n                    className={\"text-center\"}\n                    style={{margin:\"10px\"}}\n                >\n\n                    <Card.Body>\n                        <Card.Title>Cases</Card.Title>\n                        <Card.Text>{latest.cases}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small>Last updated {lastUpdated}</small>\n                    </Card.Footer>\n                </Card>\n                <Card\n                    bg=\"danger\" text={\"white\"}\n                    className={\"text-center\"}\n                    style={{margin:\"10px\"}}\n                >\n\n                    <Card.Body>\n                        <Card.Title>Deaths</Card.Title>\n                        <Card.Text>{latest.deaths}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small>Last updated {lastUpdated}</small>\n                    </Card.Footer>\n                </Card>\n                <Card bg={\"success\"}\n                      text={\"white\"}\n                      className={\"text-center\"}\n                      style={{margin:\"10px\"}}\n                >\n\n                    <Card.Body>\n                        <Card.Title>Recovered</Card.Title>\n                        <Card.Text>{latest.recovered}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small>Last updated {lastUpdated}</small>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n            <br/>\n\n            <Form>\n                <Form.Group controlId=\"formGroupSearch\">\n                    <Form.Control type=\"text\" placeholder=\"Search a country\" onChange={e=>setSearchCountry(e.target.value)} />\n                </Form.Group>\n            </Form>\n            <br/>\n\n\n            <Column queries={queries}>{countries}</Column>\n\n\n\n\n        </div>\n\n\n\n\n\n    );\n}\n\n\nexport default Stats;"]},"metadata":{},"sourceType":"module"}